#!/bin/bash
#
# Copyright (C) 2022 Masatake YAMATO <yamato@redhat.com>
#
# This file is part of util-linux.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
TS_TOPDIR="${0%/*}/../.."
TS_DESC="UDP sockets"

. "$TS_TOPDIR"/functions.sh
ts_init "$*"

ts_check_test_command "$TS_CMD_LSFD"
ts_check_test_command "$TS_HELPER_MKFDS"
ts_check_native_byteorder

ts_cd "$TS_OUTDIR"

PID=
FDS=3
FDC=4
EXTRA_PARAMS=
EXPR='(TYPE == "UDP") and (FD >= 3) and (FD <= 4)'
EXPR_server='(TYPE == "UDP") and (FD == 3)'
EXPR_client='(TYPE == "UDP") and (FD == 4)'
NAME=
LADDR=
LPORT=

{
    coproc MKFDS { "$TS_HELPER_MKFDS" udp $FDS $FDC \
				      server-port=34567 \
				      client-port=23456 ; }
    if read -r -u "${MKFDS[0]}" PID; then
	${TS_CMD_LSFD} -n \
		       -o ASSOC,TYPE,STTYPE,NAME,SOCK.STATE,SOCK.TYPE,SOCK.LISTENING,INET.LADDR,INET.RADDR,UDP.LADDR,UDP.LPORT,UDP.RADDR,UDP.RPORT \
		       -p "${PID}" -Q "${EXPR}"
	echo 'ASSOC,TYPE,STTYPE,NAME,SOCK.STATE,SOCK.TYPE,SOCK.LISTENING,INET.LADDR,INET.RADDR,UDP.LADDR,UDP.LPORT,UDP.RADDR,UDP.RPORT': $?

	kill -CONT "${PID}"
	wait "${MKFDS_PID}"
    fi

    coproc MKFDS { "$TS_HELPER_MKFDS" udp $FDS $FDC \
				      server-port=34567 \
				      client-port=23456 \
				      server-do-bind=no; }
    if read -r -u "${MKFDS[0]}" PID; then
	${TS_CMD_LSFD} -n \
		       -o ASSOC,TYPE,STTYPE,SOCK.STATE,SOCK.TYPE,SOCK.LISTENING,INET.LADDR,INET.RADDR,UDP.LADDR,UDP.LPORT,UDP.RADDR,UDP.RPORT \
		       -p "${PID}" -Q "${EXPR_server}"
	echo 'ASSOC,TYPE,STTYPE,SOCK.STATE,SOCK.TYPE,SOCK.LISTENING,INET.LADDR,INET.RADDR,UDP.LADDR,UDP.LPORT,UDP.RADDR,UDP.RPORT': $?

	NAME=$(${TS_CMD_LSFD} -n \
			       --raw \
			      -o NAME \
			      -p "${PID}" -Q "${EXPR_server}")
	if [[ "$NAME" =~ ^socket:\[[[:digit:]]+\]$ ]]; then
	    echo "NAME pattern match: OK"
	else
	    echo "NAME pattern match: FAILED (NAME=$NAME)"
	fi

	kill -CONT "${PID}"
	wait "${MKFDS_PID}"
    fi

    coproc MKFDS { "$TS_HELPER_MKFDS" udp $FDS $FDC \
				      server-port=34567 \
				      client-port=23456 \
				      client-do-bind=no; }
    if read -r -u "${MKFDS[0]}" PID; then
	${TS_CMD_LSFD} -n \
		       -o ASSOC,TYPE,STTYPE,SOCK.STATE,SOCK.TYPE,SOCK.LISTENING,INET.LADDR,INET.RADDR,UDP.RADDR,UDP.RPORT \
		       -p "${PID}" -Q "${EXPR_client}"
	echo 'ASSOC,TYPE,STTYPE,SOCK.STATE,SOCK.TYPE,SOCK.LISTENING,INET.LADDR,INET.RADDR,UDP.RADDR,UDP.RPORT': $?

	LADDR=$(${TS_CMD_LSFD} -n \
			       --raw \
			       -o UDP.LADDR \
			       -p "${PID}" -Q "${EXPR_client}")
	LPORT=$(${TS_CMD_LSFD} -n \
			       --raw \
			       -o UDP.LPORT \
			       -p "${PID}" -Q "${EXPR_client}")

	if [[ 127.0.0.1:$LPORT == ${LADDR} ]]; then
	    echo "LADDR/LPORT pattern match: OK"
	else
	    echo "LADDR/LPORT pattern match: FAILED (LADDR=$LADDR, LPORT=$LPORT)"
	fi
	
	kill -CONT "${PID}"
	wait "${MKFDS_PID}"
    fi

    coproc MKFDS { "$TS_HELPER_MKFDS" udp $FDS $FDC \
				      server-port=34567 \
				      client-port=23456 \
				      client-do-connect=no; }
    if read -r -u "${MKFDS[0]}" PID; then
	${TS_CMD_LSFD} -n \
		       -o ASSOC,TYPE,STTYPE,NAME,SOCK.STATE,SOCK.TYPE,SOCK.LISTENING,INET.LADDR,INET.RADDR,UDP.LADDR,UDP.LPORT,UDP.RADDR,UDP.RPORT \
		       -p "${PID}" -Q "${EXPR}"
	echo 'ASSOC,TYPE,STTYPE,NAME,SOCK.STATE,SOCK.TYPE,SOCK.LISTENING,INET.LADDR,INET.RADDR,UDP.LADDR,UDP.LPORT,UDP.RADDR,UDP.RPORT': $?

	kill -CONT "${PID}"
	wait "${MKFDS_PID}"
    fi
} > "$TS_OUTPUT" 2>&1

ts_finalize
