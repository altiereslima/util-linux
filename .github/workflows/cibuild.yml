name: Build test
on:
  pull_request:
    paths-ignore:
      - 'Documentation/**'
      - 'lib*/docs/**'
  push:
    branches:
      - 'cibuild'
      - 'master'
      - 'next'
      - 'stable/**'
    paths-ignore:
      - 'Documentation/**'
      - 'lib*/docs/**'

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - { COMPILER: "gcc",   COMPILER_VERSION: "10", SANITIZE: "yes", CFLAGS: "-Wno-error=unused-variable -Wno-error=unused-function" }
          - { COMPILER: "gcc",   COMPILER_VERSION: "10", SANITIZE: "no",  CFLAGS: "-Wno-error=unused-variable -Wno-error=unused-function" }
          - { COMPILER: "clang", COMPILER_VERSION: "15", SANITIZE: "yes", CFLAGS: "-Wno-error=unused-variable -Wno-error=unused-function" }
          - { COMPILER: "clang", COMPILER_VERSION: "15", SANITIZE: "no",  CFLAGS: "-Wno-error=unused-variable -Wno-error=unused-function" }
    env: ${{ matrix.env }}
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - name: Ubuntu setup
        run: sudo -E .github/workflows/cibuild-setup-ubuntu.sh
      - name: Configure & Make
        run: .github/workflows/cibuild.sh CONFIGURE MAKE
      - name: Check
        run: sudo -E .github/workflows/cibuild.sh CHECK
      - name: Make install
        run: .github/workflows/cibuild.sh INSTALL

  coveralls:
    permissions:
      contents: read # to fetch code (actions/checkout)
      checks: write # to create new checks (coverallsapp/github-action)
    runs-on: ubuntu-latest
    if: github.repository == 'util-linux/util-linux'
    env:
      COMPILER: gcc
      COMPILER_VERSION: 10
      SANITIZE: no
      COVERAGE: yes
      CFLAGS: "-Wno-error=unused-variable -Wno-error=unused-function"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - name: Ubuntu setup
        run: sudo -E .github/workflows/cibuild-setup-ubuntu.sh
      - name: Configure & Make
        run: .github/workflows/cibuild.sh CONFIGURE MAKE
      - name: Check
        run: sudo -E .github/workflows/cibuild.sh CHECK
      - name: Coveralls
        uses: coverallsapp/github-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.info

  meson:
    needs: build
    runs-on: ubuntu-latest
    env:
      COMPILER: gcc
      COMPILER_VERSION: 10
      SANITIZE: no
      CFLAGS: "-Wno-error=unused-variable -Wno-error=unused-function"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - name: Ubuntu setup
        run: sudo -E .github/workflows/cibuild-setup-ubuntu.sh
      - name: Meson configure
        run: .github/workflows/cibuild.sh MESONCONF
      - name: Meson build
        run: .github/workflows/cibuild.sh MESONBUILD

  distcheck:
    needs: build
    runs-on: ubuntu-latest
    env:
      COMPILER: gcc
      COMPILER_VERSION: 10
      SANITIZE: no
      CFLAGS: "-Wno-error=unused-variable -Wno-error=unused-function"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - name: Ubuntu setup
        run: sudo -E .github/workflows/cibuild-setup-ubuntu.sh
      - name: Configure
        run: .github/workflows/cibuild.sh CONFIGURE
      - name: Make distcheck
        run: .github/workflows/cibuild.sh DISTCHECK

  build-s390x:
    runs-on: ubuntu-latest
    env:
      CFLAGS: "-Wno-error=unused-variable -Wno-error=unused-function"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2.5.0
        with:
          arch: s390x
          distro: ubuntu_latest
          run: |
            export COMPILER=gcc
            export COMPILER_VERSION=10
            export SANITIZE=no
            export QEMU_USER=1
            export CFLAGS="-Wno-error=unused-variable -Wno-error=unused-function"

            # name: Ubuntu setup
            .github/workflows/cibuild-setup-ubuntu.sh
            git config --global --add safe.directory "$PWD"
            # Configure & Make
            .github/workflows/cibuild.sh CONFIGURE MAKE
            # Check
            .github/workflows/cibuild.sh CHECK
